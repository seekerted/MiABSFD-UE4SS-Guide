{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"MiABSFD UE4SS Guide This is a guide on how to use UE4SS to mod MiABSFD. See the UE4SS repository for its full features. One primary feature of using UE4SS is it allows you to hook into the game itself and inject code, rather than repacking the game and applying .pak patches, which might lead to incompatibility when using multiple .pak mods. Also even without mods, UE4SS just has great features like dumping objects and headers, a live object viewer, and in-game command-line enabling. Requirements The game itself UE4SS Knowledge of Lua or Blueprint* UE4SS is capable of modding via not only Lua and Blueprint, but also C++, but I do not have experience modding with C++. Installation Download UE4SS Experimental Release v2.5.2-439 ( UE4SS_v2.5.2-439-g3cea237.zip ). Make a backup of the game's executable folder ( \\steamapps\\common\\MadeInAbyss-BSFD\\MadeInAbyss-BSFD\\Binaries\\Win64 ). This is so that you can revert the game back to a clean slate in case something happens. Extract UE4SS_v2.5.2-439-g3cea237.zip into the executable folder . Grab the latest release of this repository, or just download/clone. In your copy of the repository, paste all the files inside the top folder into the executable folder . UE4SS should now be installed whenever you run the game. To uninstall, revert the executable folder back to its clean slate. Guides Once you've installed UE4SS, you can check out the guides on the sidebar on the left. While they are still WIP, if you're an advanced enough user, installation should be enough, and you can start experimenting by looking at guides from the UE4SS docs and their Discord server (also linked in the docs). Example Mods QOL Mod by me (self-plug, WIP) Free Mobility Mod by me (self-plug)","title":"Home"},{"location":"#miabsfd-ue4ss-guide","text":"This is a guide on how to use UE4SS to mod MiABSFD. See the UE4SS repository for its full features. One primary feature of using UE4SS is it allows you to hook into the game itself and inject code, rather than repacking the game and applying .pak patches, which might lead to incompatibility when using multiple .pak mods. Also even without mods, UE4SS just has great features like dumping objects and headers, a live object viewer, and in-game command-line enabling.","title":"MiABSFD UE4SS Guide"},{"location":"#requirements","text":"The game itself UE4SS Knowledge of Lua or Blueprint* UE4SS is capable of modding via not only Lua and Blueprint, but also C++, but I do not have experience modding with C++.","title":"Requirements"},{"location":"#installation","text":"Download UE4SS Experimental Release v2.5.2-439 ( UE4SS_v2.5.2-439-g3cea237.zip ). Make a backup of the game's executable folder ( \\steamapps\\common\\MadeInAbyss-BSFD\\MadeInAbyss-BSFD\\Binaries\\Win64 ). This is so that you can revert the game back to a clean slate in case something happens. Extract UE4SS_v2.5.2-439-g3cea237.zip into the executable folder . Grab the latest release of this repository, or just download/clone. In your copy of the repository, paste all the files inside the top folder into the executable folder . UE4SS should now be installed whenever you run the game. To uninstall, revert the executable folder back to its clean slate.","title":"Installation"},{"location":"#guides","text":"Once you've installed UE4SS, you can check out the guides on the sidebar on the left. While they are still WIP, if you're an advanced enough user, installation should be enough, and you can start experimenting by looking at guides from the UE4SS docs and their Discord server (also linked in the docs).","title":"Guides"},{"location":"#example-mods","text":"QOL Mod by me (self-plug, WIP) Free Mobility Mod by me (self-plug)","title":"Example Mods"},{"location":"bp/setup/","text":"Environment Setup for Blueprint Modding Ensure that you have installed UE4SS on to MiABSFD. See the main page for more information. Experimental . I'm still currently figuring out how to do this. The steps currently laid out here is what I've gathered after trial and error, but they might not be perfect. Requirements Unreal Engine 4.25.4 Visual Studio Setup Launch Unreal Engine 4.25.4 Create a project with the following settings: Games Category Blank C++, No Starter Content (other settings don't matter) Name: MadeInAbyss Change the following settings: Edit > Editor Preferences > Experimental > Allow ChunkID Assignments (Tick) Edit > Project Settings > Packaging > Generate Chunks (Tick) File > Package Project > Build Configuration > Shipping Inside the Content Browser, create the following folder: Mods/<mod name>_P Inside Mods/<mod name>_P , create a Blueprint Class > Actor named ModActor . Create an event Event BeginPlay onto the blueprint. (It is inside this Event BeginPlay of ModActor that gets called by UE4SS as soon as it gets loaded onto the game.) Close Unreal Engine. Go to your project's folder. Rename MadeInAbyss.uproject to MadeInAbyss-BSFD.uproject Delete MadeInAbyss.sln Right-click on MadeInAbyss-BSFD.uproject > Generate Visual Studio project files Open MadeInAbyss-BSFD.sln using Visual Studio Rename Game/MadeInAbyss-BSFD to Game/MadeInAbyss You should be okay. I think. Exporting your mod To all files, right click, then Asset Actions > Assign to Chunk... Chose one number between 30 and 300, then set the chunk numbers to that. Ensure that this pak chunk number is not being used by another mod! File > Package Project > Windows (64-bit) Wait for it to compile. It will take longer the first time, but much faster afterwards. The resulting paks will be available in MadeInAbyss-BSFD/WindowsNoEditor/MadeInAbyss-BSFD/Content/Paks Search for the pak with the number that you chose. That contains your mod. Rename the pak file to <mod name>_P.pak Installing your mod Insert the pak file onto steamapps/common/MadeInAbyss-BSFD/MadeInAbyss-BSFD/Content/Paks/LogicMods . Your mod should now be loaded by UE4SS when you run the game!","title":"Environment Setup"},{"location":"bp/setup/#environment-setup-for-blueprint-modding","text":"Ensure that you have installed UE4SS on to MiABSFD. See the main page for more information. Experimental . I'm still currently figuring out how to do this. The steps currently laid out here is what I've gathered after trial and error, but they might not be perfect.","title":"Environment Setup for Blueprint Modding"},{"location":"bp/setup/#requirements","text":"Unreal Engine 4.25.4 Visual Studio","title":"Requirements"},{"location":"bp/setup/#setup","text":"Launch Unreal Engine 4.25.4 Create a project with the following settings: Games Category Blank C++, No Starter Content (other settings don't matter) Name: MadeInAbyss Change the following settings: Edit > Editor Preferences > Experimental > Allow ChunkID Assignments (Tick) Edit > Project Settings > Packaging > Generate Chunks (Tick) File > Package Project > Build Configuration > Shipping Inside the Content Browser, create the following folder: Mods/<mod name>_P Inside Mods/<mod name>_P , create a Blueprint Class > Actor named ModActor . Create an event Event BeginPlay onto the blueprint. (It is inside this Event BeginPlay of ModActor that gets called by UE4SS as soon as it gets loaded onto the game.) Close Unreal Engine. Go to your project's folder. Rename MadeInAbyss.uproject to MadeInAbyss-BSFD.uproject Delete MadeInAbyss.sln Right-click on MadeInAbyss-BSFD.uproject > Generate Visual Studio project files Open MadeInAbyss-BSFD.sln using Visual Studio Rename Game/MadeInAbyss-BSFD to Game/MadeInAbyss You should be okay. I think.","title":"Setup"},{"location":"bp/setup/#exporting-your-mod","text":"To all files, right click, then Asset Actions > Assign to Chunk... Chose one number between 30 and 300, then set the chunk numbers to that. Ensure that this pak chunk number is not being used by another mod! File > Package Project > Windows (64-bit) Wait for it to compile. It will take longer the first time, but much faster afterwards. The resulting paks will be available in MadeInAbyss-BSFD/WindowsNoEditor/MadeInAbyss-BSFD/Content/Paks Search for the pak with the number that you chose. That contains your mod. Rename the pak file to <mod name>_P.pak","title":"Exporting your mod"},{"location":"bp/setup/#installing-your-mod","text":"Insert the pak file onto steamapps/common/MadeInAbyss-BSFD/MadeInAbyss-BSFD/Content/Paks/LogicMods . Your mod should now be loaded by UE4SS when you run the game!","title":"Installing your mod"},{"location":"lua/setup/","text":"Environment Setup for Lua Modding Ensure that you have installed UE4SS on to MiABSFD. See the main page for more information. Setup Inside your executable folder ( \\steamapps\\common\\MadeInAbyss-BSFD\\MadeInAbyss-BSFD\\Binaries\\Win64 ), all Lua UE4SS mods are located in Mods\\ , each mod residing in its own subfolder. Create a folder for your mod ( Mods\\<mod name> ) All scripts must be inside a Scripts folder inside the mod folder. Create Mods\\<mod name>\\Scripts\\main.lua . This'll be the first script to be loaded. Mods are disabled by default. For it to be enabled, you can either: Place an empty text file Mods\\<mod name>\\enabled.txt , or Edit Mods\\mods.txt and add the following line: <mod name> : 1 Once you've done these you can start making Lua scripts to mod the game.","title":"Environment Setup"},{"location":"lua/setup/#environment-setup-for-lua-modding","text":"Ensure that you have installed UE4SS on to MiABSFD. See the main page for more information.","title":"Environment Setup for Lua Modding"},{"location":"lua/setup/#setup","text":"Inside your executable folder ( \\steamapps\\common\\MadeInAbyss-BSFD\\MadeInAbyss-BSFD\\Binaries\\Win64 ), all Lua UE4SS mods are located in Mods\\ , each mod residing in its own subfolder. Create a folder for your mod ( Mods\\<mod name> ) All scripts must be inside a Scripts folder inside the mod folder. Create Mods\\<mod name>\\Scripts\\main.lua . This'll be the first script to be loaded. Mods are disabled by default. For it to be enabled, you can either: Place an empty text file Mods\\<mod name>\\enabled.txt , or Edit Mods\\mods.txt and add the following line: <mod name> : 1 Once you've done these you can start making Lua scripts to mod the game.","title":"Setup"}]}